using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace ArduinoCodeGen;

internal class Program
{
    const string ARDUINO_FOLDER = "D:\\Bn\\Src\\Water\\Arduino\\water2";
    const string SECRETS_FOLDER = "D:\\Bn\\Src\\Water_Secrets";
    const string CERT_FILENAME = "myCert202406.crt";

    static void Main(string[] args)
    {
        if ((!Directory.Exists(ARDUINO_FOLDER))
            || (!Directory.Exists(SECRETS_FOLDER)))
        {
            Console.WriteLine("Paths misconfigured");
            return;
        }

        CertH();

        Console.WriteLine("DONE");
    }

    static void CertH()
    {
        Console.WriteLine("cert.h");

        try
        {
            string[] allLines = File.ReadAllLines(Path.Combine(SECRETS_FOLDER, CERT_FILENAME));

            StringBuilder sb = new StringBuilder();
            sb.AppendLine("#pragma once");
            sb.AppendLine();
            sb.AppendLine("//------------------------------------");
            sb.AppendLine("// Generated by ArduinoCodeGen.");
            sb.AppendLine("// Manual modifications will be LOST!");
            sb.AppendLine("//                                 Bn");
            sb.AppendLine("//------------------------------------");
            sb.AppendLine();

            sb.Append("const char *serverCert = ");
            for (int i=0; i<allLines.Length; i++)
            {
                string line = allLines[i];
                if (i > 0)
                    sb.AppendLine(@" \");

                sb.Append('\"');
                sb.Append(line);
                if (i + 1 < allLines.Length)
                    sb.Append(@"\n");
                sb.Append('\"');
            }

            sb.Append(';');

            File.WriteAllText(Path.Combine(ARDUINO_FOLDER, "cert.h"), sb.ToString(), Encoding.ASCII);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
